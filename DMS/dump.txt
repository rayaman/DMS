Token Dump:
Line <1> newline 		 
Line <1> newline 		 
Line <1> flag 		 
Line <1> name 		 main
Line <1> newline 		 
Line <2> newline 		 
Line <3> flag 		 
Line <3> name 		 omniscient
Line <3> newline 		 
Line <3> newline 		 
Line <4> flag 		 
Line <4> name 		 forseelabels
Line <4> newline 		 
Line <4> newline 		 
Line <5> flag 		 
Line <5> name 		 savestate
Line <5> newline 		 
Line <5> newline 		 
Line <6> newline 		 
Line <7> newline 		 
Line <8> flag 		 
Line <8> string 		 loadtest.dms
Line <8> newline 		 
Line <8> newline 		 
Line <9> flag 		 
Line <9> number 		 0.2
Line <9> newline 		 
Line <9> newline 		 
Line <10> flag 		 
Line <10> name 		 extendedDefine
Line <10> newline 		 
Line <10> newline 		 
Line <11> newline 		 
Line <11> newline 		 
Line <12> bracketo 		 [
Line <12> name 		 main
Line <12> bracketc 		 ]
Line <12> newline 		 
Line <12> newline 		 
Line <13> string 		 why
Line <13> newline 		 
Line <13> newline 		 
Line <14> name 		 Bob
Line <14> colon 		 :
Line <14> cbracketo 		 {
Line <14> newline 		 
Line <14> newline 		 
Line <15> name 		 speed
Line <15> number 		 50
Line <15> newline 		 
Line <15> newline 		 
Line <16> name 		 excited
Line <16> colon 		 :
Line <16> string 		 Hello Mr. `Ryan:lname`, 
Line <16> newline 		 
Line <16> newline 		 
Line <17> string 		 how are you doing?
Line <17> newline 		 
Line <17> newline 		 
Line <18> cbracketc 		 }
Line <18> newline 		 
Line <18> newline 		 
Line <19> newline 		 
Line <19> newline 		 
Line <20> newline 		 
Line <21> newline 		 
Line <21> newline 		 
Line <22> name 		 Ryan
Line <22> colon 		 :
Line <22> cbracketo 		 {
Line <22> newline 		 
Line <22> newline 		 
Line <23> string 		 Hey `Bob`, I'm good how are you?
Line <23> newline 		 
Line <23> newline 		 
Line <24> cbracketc 		 }
Line <24> newline 		 
Line <25> newline 		 
Line <25> newline 		 
Line <26> string 		 Waiting ...
Line <26> newline 		 
Line <26> newline 		 
Line <27> newline 		 
Line <27> newline 		 
Line <28> exit 		 
Line <28> number 		 1
Line <28> newline 		 
Line <28> newline 		 
Line <29> newline 		 
Line <29> newline 		 
Line <30> name 		 Bob
Line <30> colon 		 :
Line <30> cbracketo 		 {
Line <30> newline 		 
Line <30> newline 		 
Line <31> string 		 I am great thanks! I want to show you that I can count!

Line <31> newline 		 
Line <31> newline 		 
Line <32> name 		 wait
Line <32> number 		 1
Line <32> newline 		 
Line <32> newline 		 
Line <33> string 		 1

Line <33> newline 		 
Line <33> newline 		 
Line <34> name 		 wait
Line <34> number 		 1
Line <34> newline 		 
Line <34> newline 		 
Line <35> string 		 2

Line <35> newline 		 
Line <35> newline 		 
Line <36> name 		 wait
Line <36> number 		 1
Line <36> newline 		 
Line <36> newline 		 
Line <37> string 		 3

Line <37> newline 		 
Line <37> newline 		 
Line <38> name 		 wait
Line <38> number 		 1
Line <38> newline 		 
Line <38> newline 		 
Line <39> string 		 4

Line <39> newline 		 
Line <39> newline 		 
Line <40> name 		 wait
Line <40> number 		 1
Line <40> newline 		 
Line <40> newline 		 
Line <41> string 		 5

Line <41> newline 		 
Line <41> newline 		 
Line <42> cbracketc 		 }
Line <42> newline 		 
Line <42> newline 		 
Line <43> newline 		 
Line <43> newline 		 
Line <44> control 		 
Line <44> string 		 What do you want to do?
Line <44> cbracketo 		 {
Line <44> newline 		 
Line <44> newline 		 
Line <45> string 		 option 1
Line <45> name 		 test2
Line <45> parao 		 (
Line <45> string 		 testing
Line <45> seperator 		 ,
Line <45> cbracketo 		 {
Line <45> number 		 1
Line <45> seperator 		 ,
Line <45> number 		 2
Line <45> seperator 		 ,
Line <45> number 		 3
Line <45> cbracketc 		 }
Line <45> parac 		 )
Line <45> newline 		 
Line <45> newline 		 
Line <46> string 		 option 2
Line <46> jump 		 
Line <46> string 		 test
Line <46> newline 		 
Line <46> newline 		 
Line <47> string 		 option 3
Line <47> jump 		 
Line <47> name 		 there
Line <47> newline 		 
Line <47> newline 		 
Line <48> string 		 option 4
Line <48> gotoo 		 
Line <48> string 		 o3
Line <48> newline 		 
Line <48> newline 		 
Line <49> string 		 option 5
Line <49> gotoo 		 
Line <49> name 		 here
Line <49> newline 		 
Line <49> newline 		 
Line <50> string 		 option 6
Line <50> name 		 test
Line <50> parao 		 (
Line <50> string 		 here
Line <50> parac 		 )
Line <50> newline 		 
Line <50> newline 		 
Line <51> cbracketc 		 }
Line <51> newline 		 
Line <51> newline 		 
Line <52> newline 		 
Line <52> newline 		 
Line <53> bracketo 		 [
Line <53> name 		 test
Line <53> bracketc 		 ]
Line <53> newline 		 
Line <53> newline 		 
Line <54> name 		 Ryan
Line <54> colon 		 :
Line <54> string 		 We are here now!
Line <54> newline 		 
Line <54> newline 		 
Line <55> pipe 		 |
Line <55> string 		 This continues from the last message!
Line <55> newline 		 
Line <55> newline 		 
Line <56> pipe 		 |
Line <56> string 		 Keeps code readable. This does not cause a new line!
Line <56> newline 		 
Line <56> newline 		 
Line <57> name 		 Ryan
Line <57> colon 		 :
Line <57> string 		 This does trigger a new line tho!
Line <57> newline 		 
Line <57> newline 		 
Line <58> string 		 This also will cause a new line!
Line <58> newline 		 
Line <58> newline 		 
Line <59> newline 		 
Line <59> newline 		 
Line <60> bracketo 		 [
Line <60> name 		 Bob
Line <60> colon 		 :
Line <60> name 		 char
Line <60> bracketc 		 ]
Line <60> newline 		 
Line <60> newline 		 
Line <61> name 		 fname
Line <61> equal 		 =
Line <61> string 		 Bob
Line <61> newline 		 
Line <61> newline 		 
Line <62> newline 		 
Line <63> newline 		 
Line <64> name 		 unknown
Line <64> equal 		 =
Line <64> string 		 Some Rando
Line <64> newline 		 
Line <64> newline 		 
Line <65> name 		 age
Line <65> equal 		 =
Line <65> number 		 0.24
Line <65> newline 		 
Line <65> newline 		 
Line <66> name 		 money
Line <66> equal 		 =
Line <66> number 		 100
Line <66> newline 		 
Line <66> newline 		 
Line <67> name 		 excited
Line <67> colon 		 :
Line <67> string 		 path/to/file
Line <67> newline 		 
Line <67> newline 		 
Line <68> newline 		 
Line <68> newline 		 
Line <69> bracketo 		 [
Line <69> name 		 newblock
Line <69> colon 		 :
Line <69> name 		 function
Line <69> parao 		 (
Line <69> parac 		 )
Line <69> bracketc 		 ]
Line <69> newline 		 
Line <69> newline 		 
Line <70> string 		 Test #2
Line <70> newline 		 
Line <70> newline 		 
Line <71> string 		 Does it parse this part properly?
Line <71> newline 		 
Line <71> newline 		 
Line <72> string 		 huh
Line <72> newline 		 
Line <72> newline 		 
Line <72> eof 		 
Line <1> newline 		 
Line <1> newline 		 
Line <1> flag 		 
Line <1> name 		 tests
Line <1> newline 		 
Line <1> newline 		 
Line <2> flag 		 
Line <2> name 		 hello
Line <2> newline 		 
Line <2> newline 		 
Line <3> bracketo 		 [
Line <3> name 		 default
Line <3> colon 		 :
Line <3> name 		 char
Line <3> bracketc 		 ]
Line <3> newline 		 
Line <3> newline 		 
Line <4> newline 		 
Line <5> name 		 money
Line <5> equal 		 =
Line <5> number 		 0
Line <5> newline 		 
Line <5> newline 		 
Line <6> name 		 test
Line <6> equal 		 =
Line <6> nil 		 nil
Line <6> newline 		 
Line <6> newline 		 
Line <7> newline 		 
Line <7> newline 		 
Line <8> bracketo 		 [
Line <8> name 		 Ryan
Line <8> colon 		 :
Line <8> name 		 char
Line <8> bracketc 		 ]
Line <8> newline 		 
Line <8> newline 		 
Line <9> name 		 age
Line <9> equal 		 =
Line <9> number 		 21
Line <9> newline 		 
Line <9> newline 		 
Line <10> name 		 money
Line <10> equal 		 =
Line <10> number 		 1000
Line <10> newline 		 
Line <10> newline 		 
Line <11> name 		 lname
Line <11> equal 		 =
Line <11> string 		 Ward
Line <11> newline 		 
Line <11> newline 		 
Line <12> name 		 known
Line <12> equal 		 =
Line <12> true 		 true
Line <12> newline 		 
Line <12> newline 		 
Line <13> newline 		 
Line <14> name 		 calm
Line <14> colon 		 :
Line <14> string 		 ./path/to/file
Line <14> newline 		 
Line <14> newline 		 
Line <15> name 		 excited
Line <15> colon 		 :
Line <15> string 		 ./path/to/file
Line <15> newline 		 
Line <15> newline 		 
Line <16> newline 		 
Line <16> newline 		 
Line <17> bracketo 		 [
Line <17> name 		 step
Line <17> colon 		 :
Line <17> name 		 function
Line <17> parao 		 (
Line <17> name 		 a
Line <17> seperator 		 ,
Line <17> name 		 b
Line <17> seperator 		 ,
Line <17> name 		 c
Line <17> parac 		 )
Line <17> bracketc 		 ]
Line <17> newline 		 
Line <17> newline 		 
Line <18> string 		 Testing...
Line <18> newline 		 
Line <19> name 		 d
Line <19> equal 		 =
Line <19> parao 		 (
Line <19> number 		 100
Line <19> plus 		 +
Line <19> name 		 b
Line <19> parac 		 )
Line <19> divide 		 /
Line <19> name 		 c
Line <19> newline 		 
Line <19> newline 		 
Line <20> name 		 e
Line <20> equal 		 =
Line <20> string 		 somestring
Line <20> newline 		 
Line <20> newline 		 
Line <21> name 		 e
Line <21> equal 		 =
Line <21> nil 		 nil
Line <21> newline 		 
Line <21> newline 		 
Line <22> name 		 g
Line <22> equal 		 =
Line <22> false 		 false
Line <22> newline 		 
Line <22> newline 		 
Line <23> ret 		 
Line <23> name 		 d
Line <23> newline 		 
Line <23> newline 		 
Line <24> newline 		 
Line <24> newline 		 
Line <25> bracketo 		 [
Line <25> name 		 inventory
Line <25> colon 		 :
Line <25> name 		 env
Line <25> bracketc 		 ]
Line <25> newline 		 
Line <25> newline 		 
Line <26> name 		 slot1
Line <26> equal 		 =
Line <26> string 		 S1
Line <26> newline 		 
Line <26> newline 		 
Line <27> name 		 slot2
Line <27> equal 		 =
Line <27> string 		 S2
Line <27> newline 		 
Line <27> newline 		 
Line <28> name 		 slot3
Line <28> equal 		 =
Line <28> string 		 S3
Line <28> newline 		 
Line <28> newline 		 
Line <29> name 		 slot4
Line <29> equal 		 =
Line <29> string 		 S4
Line <29> newline 		 
Line <29> newline 		 
Line <30> name 		 slot5
Line <30> equal 		 =
Line <30> string 		 S5
Line <30> newline 		 
Line <30> newline 		 
Line <31> name 		 slot6
Line <31> equal 		 =
Line <31> string 		 S6
Line <31> newline 		 
Line <31> newline 		 
Line <32> name 		 slot7
Line <32> equal 		 =
Line <32> string 		 S7
Line <32> newline 		 
Line <32> newline 		 
Line <33> name 		 slot8
Line <33> equal 		 =
Line <33> string 		 S8
Line <33> newline 		 
Line <33> newline 		 
Line <33> eof 		 
